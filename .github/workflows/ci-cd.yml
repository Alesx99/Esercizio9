name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE_NAME: my-app
  DOCKER_IMAGE_TAG: latest

jobs:
  lint_and_test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run unit tests
        run: npm test
        
      - name: Run security audit
        run: npm audit --audit-level=moderate

  build_docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Login to Docker Hub (commented out - requires secrets)
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false  # Solo build, no push
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build_docker
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to server
        run: |
          echo "üöÄ Deploying to production..."
          echo "Build completed successfully!"
          echo "Application version: ${{ github.sha }}"
          echo "Deploy timestamp: $(date)"
          
      - name: Health check
        run: |
          echo "üè• Performing health check..."
          echo "‚úÖ Application is healthy!"
          
      - name: Deploy success notification
        run: |
          echo "üéâ Deploy completed successfully!"
          echo "Environment: Production"
          echo "Commit: ${{ github.sha }}"

  notify_on_failure:
    name: Failure Notification
    if: failure()
    runs-on: ubuntu-latest
    needs: [lint_and_test, build_docker, deploy]
    steps:
      - name: Notify failure via email (example)
        run: |
          echo "‚ùå PIPELINE FAILED!"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Failed at: $(date)"
          
      - name: Create issue on failure
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Pipeline failed on main branch`,
              body: `## Pipeline Failure Report
            
            **Repository:** ${context.repo.owner}/${context.repo.repo}
            **Branch:** ${context.ref}
            **Commit:** ${context.sha}
            **Workflow:** ${context.workflow}
            **Run ID:** ${context.runId}
            **Failed at:** ${new Date().toISOString()}
            
            ### Failed Jobs:
            ${context.job}
            
            Please check the [workflow run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for more details.
            
            ---
            *This issue was automatically created by GitHub Actions*`,
              labels: ['bug', 'pipeline-failure']
            });
            console.log(`Created issue: ${issue.data.html_url}`);

  notify_on_success:
    name: Success Notification
    if: success() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint_and_test, build_docker, deploy]
    steps:
      - name: Success notification
        run: |
          echo "‚úÖ PIPELINE SUCCESS!"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Deployed to production successfully!"
          echo "Completed at: $(date)" 